<testsuites id="" name="" tests="6" failures="1" skipped="3" errors="0" time="3.34973">
<testsuite name="pet.spec.ts" timestamp="2025-08-05T00:46:07.089Z" hostname="API Tests" tests="6" failures="1" skipped="3" time="2.967" errors="0">
<testcase name="Pet Store API Tests › TC001: Add new pet with name &quot;Cat1&quot; and verify creation" classname="pet.spec.ts" time="1.433">
<system-out>
<![CDATA[✅ Successfully created pet: {"id":9222968140497181000,"category":{"id":1,"name":"Cats"},"name":"Cat1","photoUrls":["https://example.com/photo1.jpg","https://example.com/photo2.jpg"],"tags":[{"id":1,"name":"friendly"},{"id":2,"name":"cute"}],"status":"available"}
]]>
</system-out>
</testcase>
<testcase name="Pet Store API Tests › TC002: Add new pet with name &quot;Cat2&quot; and verify creation" classname="pet.spec.ts" time="0.557">
<system-out>
<![CDATA[✅ Successfully created pet: {"id":9222968140497181000,"category":{"id":1,"name":"Cats"},"name":"Cat2","photoUrls":["https://example.com/photo1.jpg","https://example.com/photo2.jpg"],"tags":[{"id":1,"name":"friendly"},{"id":2,"name":"cute"}],"status":"available"}
]]>
</system-out>
</testcase>
<testcase name="Pet Store API Tests › TC003: Find pets by status &quot;available&quot; and verify correct status" classname="pet.spec.ts" time="0.977">
<failure message="pet.spec.ts:70:7 TC003: Find pets by status &quot;available&quot; and verify correct status" type="FAILURE">
<![CDATA[  [API Tests] › pet.spec.ts:70:7 › Pet Store API Tests › TC003: Find pets by status "available" and verify correct status 

    Error: expect(received).toBeDefined()

    Received: undefined

       at ../src/utils/Assertions.ts:38

      36 |   static assertValidPet(pet: Pet): void {
      37 |     expect(pet).toBeDefined();
    > 38 |     expect(pet.name).toBeDefined();
         |                      ^
      39 |     expect(typeof pet.name).toBe('string');
      40 |     expect(pet.photoUrls).toBeDefined();
      41 |     expect(Array.isArray(pet.photoUrls)).toBeTruthy();
        at Function.assertValidPet (/Users/flp9irwansyarifuddin/Documents/typescript/petstore-pw/src/utils/Assertions.ts:38:22)
        at forEach (/Users/flp9irwansyarifuddin/Documents/typescript/petstore-pw/tests/pet.spec.ts:91:21)
        at /Users/flp9irwansyarifuddin/Documents/typescript/petstore-pw/tests/pet.spec.ts:90:10
]]>
</failure>
</testcase>
<testcase name="Pet Store API Tests › TC004: Find pets by status &quot;pending&quot; and verify correct status" classname="pet.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Pet Store API Tests › TC005: Find pet by ID and verify response complies with contract" classname="pet.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Pet Store API Tests › TC006: Find pet by non-existent ID should return 404" classname="pet.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>